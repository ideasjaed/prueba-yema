{"version":3,"sources":["statics/images/company.jpg","components/Navegation.jsx","components/CharactersQuery.jsx","components/Pagination.jsx","pages/Home.js","pages/About.js","components/Loading.jsx","App.js","index.js"],"names":["module","exports","Navegation","className","to","CharactersQuery","data","id","links","launch_success","mission_name","launch_date_local","key","src","flickr_images","alt","console","log","format","href","wikipedia","target","rel","Pagination","totalCount","onSelectPage","selectPage","pages","Math","ceil","Array","keys","map","page","onClick","parseInt","Home","onChangePage","history","useHistory","useParams","useEffect","launchesPast","launche","launchesPastResult","push","result","About","datos","ImageCompany","company","name","summary","website","launch_sites","Loading","App","useState","setPage","query","gql","loading","error","exact","path","handleChangePage","client","ApolloClient","uri","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,qC,4KC0B5BC,EAtBI,WAEf,OAEC,yBAAKC,UAAU,0BACZ,yBAAKA,UAAU,kFACb,yBAAKA,UAAU,mDACb,kBAAC,IAAD,CAAMA,UAAU,sDAAsDC,GAAG,KAAzE,SAEF,yBAAKD,UAAU,4DACX,yBAAKA,UAAU,wBACf,kBAAC,IAAD,CAAMA,UAAU,wFAAwFC,GAAG,UAA3G,cAEJ,kC,gCCoBKC,EAnCS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBC,EAA+DD,EAA/DC,GAAIC,EAA2DF,EAA3DE,MAAOC,EAAoDH,EAApDG,eAAgBC,EAAoCJ,EAApCI,aAAcC,EAAsBL,EAAtBK,kBACjD,OACE,oCACI,yBAAKR,UAAU,2BAA2BS,IAAKL,GAC7C,yBACEJ,UAAU,uBACVU,IAAKL,EAAMM,cACXC,IAAI,aAEN,yBAAKZ,UAAU,sBACb,yBAAKA,UAAU,iBACZa,QAAQC,IAAIR,GACb,uBAAGN,UAAWM,EAAiB,iBAAmB,gBAC/CC,IAGL,uBAAGP,UAAU,2BAAb,yBACwB,kBAAC,IAAD,CAAQe,OAAO,OAAOP,IAE9C,uBACER,UAAU,mGACVgB,KAAMX,EAAMY,UACZC,OAAO,SACPC,IAAI,uBAJN,iB,QCAKC,EAlBE,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,WAGrCC,EAAQC,KAAKC,KAAKL,EAAW,IACnC,OACI,yBAAKrB,UAAU,iCACV,YAAI2B,MAAMH,EAAM,GAAGI,QAAQC,KAAI,SAACC,GAAD,OACjC,4BAAQC,QAAU,kBAAMT,EAAaQ,EAAK,IAAI9B,UAAS,oFAA+EgC,SAAST,KAAgBO,EAAO,EAAI,gCAAkC,KACtMA,EAAK,QCaPG,EApBF,SAAC,GAA0B,IAAzB9B,EAAwB,EAAxBA,KAAM+B,EAAkB,EAAlBA,aACXC,EAAUC,cACVN,EAASO,cAATP,KAMN,OAJAQ,qBAAU,WACNJ,GAAgBA,EAAaJ,KAC9B,CAACA,IAIA,yBAAK9B,UAAU,qBACf,yBAAKA,UAAU,oGACVG,EAAKoC,aAAaV,KAAI,SAAAW,GAAO,OAAK,kBAAC,EAAD,CAAkBrC,KAAMqC,QAE9DrC,GAAQA,EAAKsC,oBAAsB,kBAAC,EAAD,CAAYlB,WAAYO,EAAMR,aAAc,SAAAQ,GAAI,OAAIK,EAAQO,KAAK,SAASZ,IAAQT,WAAYlB,EAAKsC,mBAAmBE,OAAOtB,e,iBCK1JuB,EAtBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEb,OACA,yBAAK7C,UAAU,qBACX,yBAAKA,UAAU,oBACf,gCACE,yBAAKU,IAAKoC,IAAclC,IAAI,MAE9B,yBAAKZ,UAAU,gBACb,wBAAIA,UAAU,uCAAd,aAA+D6C,EAAME,QAAQC,MAC7E,2BAAIH,EAAME,QAAQE,SAClB,yBAAKjD,UAAU,8EACf,uBAAGA,UAAU,sCAAb,cAA6D,uBAAGgB,KAAM6B,EAAME,QAAQ1C,MAAM6C,SAAUL,EAAME,QAAQ1C,MAAM6C,UACxH,uBAAGlD,UAAU,WAAb,0BAA+C6C,EAAME,QAAQI,mBCUxDC,EAvBC,WACZ,OACI,yBAAKpD,UAAU,qBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,SACf,yBAAKA,UAAU,eACX,yBAAKA,UAAU,SACX,+BACA,+BACA,+BACA,+BACA,+BACA,+BACA,iCAGZ,yC,2fC2DDqD,MAjEf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNxB,EADM,KACAyB,EADA,KAMPC,EAAQC,YAAH,IAE8B,GAAL3B,GA4BpC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0B,MAAOA,IACX,YAA+B,IAA5BE,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOxD,EAAW,EAAXA,KAClB,OAAIuD,EAAgB,kBAAC,EAAD,MAChBC,EAAc,qCACV,yBAAK3D,UAAU,OACrB,kBAAC,EAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,CAAOhB,MAAO1C,KAEhB,kBAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,KAChB,kBAAC,IAAD,CAAU5D,GAAG,aAEf,kBAAC,IAAD,CAAO2D,OAAK,EAACC,KAAK,eAChB,kBAAC,EAAD,CAAM1D,KAAMA,EAAM+B,aAAc,SAAAJ,GAAI,OAlD3B,SAAAA,GACvByB,EAAQzB,GAiD8CgC,CAAiBhC,cC1DrEiC,G,MAAS,IAAIC,IAAa,CAC9BC,IAAK,sCAGDC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAD,CAAgBP,OAAQA,GACtB,kBAAC,EAAD,OAEFG,K","file":"static/js/main.7874e098.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/company.c4bbeade.jpg\";","import React from 'react';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\nconst Navegation = () => {\r\n    \r\n    return (\r\n      \r\n     <div className=\"container-fluid w-full\">\r\n        <nav className=\"w-full flex items-center justify-between flex-wrap bg-teal-500 p-6 mb-4 w-full\">\r\n          <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\r\n            <Link className=\"cursor-pointer font-semibold text-xl tracking-tight\" to=\"/\">YEMA</Link>\r\n          </div>\r\n          <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\r\n              <div className=\"text-sm lg:flex-grow\">\r\n              <Link className=\"cursor-pointer block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\" to=\"/about\">Acerca de</Link>\r\n              </div>\r\n          <div>\r\n          </div>\r\n          </div>\r\n        </nav>\r\n     </div>\r\n     \r\n      );\r\n}\r\n\r\nexport default Navegation;","import React from \"react\";\r\nimport Moment from 'react-moment';\r\nconst CharactersQuery = ({ data }) => {\r\n  const { id, links, launch_success, mission_name, launch_date_local } = data;\r\n  return (\r\n    <>\r\n        <div className=\"rounded overflow-hidden \" key={id}>\r\n          <img\r\n            className=\"w-full imageLaunches\"\r\n            src={links.flickr_images}\r\n            alt=\"Card cap\"\r\n          />\r\n          <div className=\"px-6 py-4 bg-white\">\r\n            <div className=\" text-xl mb-2\">\r\n              {console.log(launch_success)}\r\n              <p className={launch_success ? \"text-green-500\" : \"text-red-500\"}>\r\n                {mission_name}\r\n              </p>\r\n            </div>\r\n            <p className=\"text-gray-700 text-base\">\r\n              Fecha de lanzamiento: <Moment format='lll'>{launch_date_local}</Moment> \r\n            </p>\r\n            <a\r\n              className=\"inline-block align-baseline bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n              href={links.wikipedia}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Wikipedia\r\n            </a>\r\n          </div>\r\n        </div>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharactersQuery;\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst Pagination = ({totalCount, onSelectPage, selectPage}) => {\r\n\r\n    \r\n    const pages = Math.ceil(totalCount/12); \r\n    return (\r\n        <div className=\"flex justify-center mt-8 mb-8\">\r\n            {[...Array(pages-1).keys()].map((page) => (\r\n           <button onClick={ () => onSelectPage(page+1)} className={`bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l ${parseInt(selectPage) === page + 1 ? \"opacity-50 cursor-not-allowed\" : \"\"}`}>\r\n                {page+1}\r\n            </button>\r\n        ))}\r\n           \r\n  \r\n</div>\r\n      \r\n    );\r\n  };\r\n\r\n  export default Pagination\r\n\r\n\r\n  ","import React, {useEffect} from 'react'\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport CharactersQuery from \"../components/CharactersQuery\";\r\nimport Pagination from '../components/Pagination';\r\n\r\nconst Home = ({data, onChangePage}) => {\r\n    const history = useHistory();\r\n    let { page } = useParams();\r\n\r\n    useEffect(() => {\r\n        onChangePage && onChangePage(page)\r\n    }, [page])\r\n    \r\n    return (\r\n            \r\n        <div className=\"container mx-auto\">\r\n        <div className=\"grid grid-cols-1 row-gap-8 sm:grid-cols-2 sm:col-gap-5 sm:row-gap-6 md:grid-cols-4 lg:col-span-4\">\r\n            {data.launchesPast.map(launche => (<CharactersQuery  data={launche}/>))}\r\n        </div>\r\n        {data && data.launchesPastResult && <Pagination selectPage={page} onSelectPage={page => history.push(\"/home/\"+page) } totalCount={data.launchesPastResult.result.totalCount} />}\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","import  React from 'react'\r\nimport ImageCompany from '../statics/images/company.jpg'\r\nconst About = ({ datos }) => {\r\n  //{const datoss = datos.company}\r\n    return (\r\n    <div className=\"container mx-auto\">\r\n        <div className=\"grid grid-cols-1\">\r\n        <header>\r\n          <img src={ImageCompany} alt=\"\"/>\r\n        </header>\r\n        <div className=\"bg-white p-2\">\r\n          <h2 className=\"text-4xl text-current font-semibold\">Acerca de {datos.company.name}</h2>\r\n          <p>{datos.company.summary}</p>\r\n          <div className=\"mt-1 bg-blue-100 border-t border-b border-blue-500 text-blue-700 px-4 py-3\">\r\n          <p className=\" text-blue-500 hover:text-blue-800\">Sitio web: <a href={datos.company.links.website}>{datos.company.links.website}</a></p>\r\n          <p className=\"text-sm\">sitios de lanzamiento: {datos.company.launch_sites}</p>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"container-loading\">\r\n            <div className=\"content\">\r\n                <div className=\"planet\">\r\n                    <div className=\"ring\"></div>\r\n                    <div className=\"cover-ring\"></div>\r\n                        <div className=\"spots\">\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                            <span></span>\r\n                        </div>\r\n                    </div>\r\n                <p>loading</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState } from \"react\";\nimport Navegation from \"./components/Navegation\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport Home from \"./pages/Home\"\nimport About from \"./pages/About\";\nimport {\n  BrowserRouter as Router, Switch, Route,Redirect\n} from \"react-router-dom\";\nimport Loading from \"./components/Loading\";\n\n\n\nfunction App() {\n  const [page, setPage] = useState(1)\n  const handleChangePage = page =>{\n    setPage(page)\n  }\n\n  const query = gql`\n  {\n    launchesPast(limit: 12, offset: ${page*12}) {\n      mission_name\n      launch_date_local\n      links {\n        article_link\n        wikipedia\n        flickr_images\n      }\n      launch_success\n      id\n    }\n    launchesPastResult {\n      result {\n        totalCount\n      }\n    }\n    company {\n      name\n      links {\n        flickr\n        website\n      }\n      summary\n      launch_sites\n    }\n  }\n  \n  `;\n  return (\n    <Router>\n      <Query query={query}>\n        {({ loading, error, data }) => {\n          if (loading) return <Loading />\n          if (error) return <p>Error!</p>;\n          return  <div className=\"App\">\n            <Navegation />\n              <Switch>\n                <Route exact path=\"/about\">\n                  <About datos={data} />\n                </Route>\n                <Route exact path=\"/\">\n                  <Redirect to=\"/home/1\" />\n                </Route>\n                <Route exact path=\"/home/:page\">\n                  <Home data={data} onChangePage={page => handleChangePage(page)}/>\n                </Route>\n\n              </Switch>\n         \n        </div>\n\n        }}\n      </Query>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"./App\";\nimport './styles/style.css';\n\nconst client = new ApolloClient({\n  uri: \"https://api.spacex.land/graphql/\"\n});\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  rootElement\n);\n\n"],"sourceRoot":""}